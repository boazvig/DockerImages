#
# this dockerfile roughly follows the 'Installing from source' from:
#   http://wiki.ros.org/noetic/Installation/Source
#
#ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.5.0
#FROM ${BASE_IMAGE}
FROM ubuntu:20.04


ARG ROS_PKG=ros_base
ENV ROS_DISTRO=noetic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
ENV ROS_PYTHON_VERSION=3

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace




#RUN apt purge --auto-remove cmake

RUN  apt update && \
 apt install -y  --no-install-recommends software-properties-common lsb-release && \
 apt clean all

#
# add the ROS deb repo to the apt sources list
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        apt-utils \
        git \
		cmake>=3.19.2 \
		build-essential \
		curl \
		wget \
		gnupg2 \
		lsb-release \
		ca-certificates \
    && rm -rf /var/lib/apt/lists/*



RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -


#
# install bootstrap dependencies
#
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          libpython3-dev \
          python3-rosdep \
          python3-rosinstall-generator \
          python3-vcstool \
          build-essential && \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          ros-noetic-desktop-full

COPY ./Dockerfile.ros.noetic ./




#RUN cd Open3D && \
#  sh ./util/install_deps_ubuntu.sh assume-yes

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        xorg-dev \
		libglu1-mesa-dev \
		python3-dev  \
		libsdl2-dev \
		libc++-7-dev \
		libc++abi-7-dev \
		ninja-build \
		libxi-dev \
        gfortran \
        libtbb-dev \
        libosmesa6-dev \
        libudev-dev \
        autoconf \
        libtool \
    && rm -rf /var/lib/apt/lists/*

RUN pwd




# Open3d installation - using manual copy and auto install 
#RUN mkdir Open3D

#COPY ./Open3D/ ./Open3D/

#RUN cd Open3D && \
#    mkdir build && \
#    cd build &&\
#    cmake .. \



# Agile autonomy 
# RUN mkdir agile_autonomy_ws && \
#    cd agile_autonomy_ws && \
#    export CATKIN_WS=./catkin_aa && \
#    mkdir -p $CATKIN_WS/src && \
#    cd $CATKIN_WS && \
#    catkin && \
#    catkin config --extend /opt/ros/$ROS_VERSION && \
#    catkin config --merge-devel && \
#    catkin config --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-fdiagnostics-color && \
#    cd src && \



#
# setup entrypoint
#
#COPY ./packages/ros_entrypoint.sh /ros_entrypoint.sh
RUN echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> /root/.bashrc
#ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /
